openapi: 3.0.1
info:
  title:  Training platform API
  description: Dataset management and model training
  version: '1.1'
servers:
  - url: http://localhost:5000/api/v1
paths:
  /raw-data/list:
    get:
      summary: 获取预标注样本列表
      tags:
        - 样本服务-unlabeledData
      operationId: gets the list of rawData
      parameters:
        - in: query
          name: page
          description: page number, default 1
          schema:
            type: integer
        - in: query
          name: limit
          description: page size, default 10
          schema:
            type: integer
        - in: query
          name: sourceType
          description: 原始样本来源类型
          schema:
            type: string
            enum:
              - box
              - manual
              - other
        - in: query
          name: status
          description: 原始样本状态
          schema:
            type: string
            enum:
              - unlabeled
              - labeled
              - locked
        - in: query
          name: sourceId
          description: 原始样本来源id
          schema:
            type: string
        - in: query
          name: gteCreatedAt
          description: 原始样本创建时间大于等于
          schema:
            type: string
        - in: query
          name: lteCreatedAt
          description: 原始样本创建时间小于等于
          schema:
            type: string
      responses:
        '200':
          description: got back the list of rawData
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rawDatas'
  /raw-data/save:
    post:
      summary: 添加原始样本
      tags:
        - 样本服务-unlabeledData
      responses:
        '200':
          description: ' import the specified rawData'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      requestBody:
        required: true
        content:
          multipart/form-data:
#          application/json:
            schema:
              $ref: '#/components/schemas/rawDataAddBody'
  /raw-data/remove:
    post:
      summary: 删除原始样本
      tags:
        - 样本服务-unlabeledData
      responses:
        '200':
          description: ' remove the specified rawData'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: array
                  items:
                    type: string
  /raw-data/id/{{id}}:
    get:
      summary: 获取原始样本详细信息
      tags:
        - 样本服务-unlabeledData
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: got back rawData info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rawData'

  /labeledData:
    get:
      summary: 查询标注样本列表
      tags:
        - 样本服务-labeledData
      operationId: gets the list of labeledDatas
      parameters:
        - in: query
          name : page
          description: page number, default 1
          schema:
            type: integer
        - in: query
          name : limit
          description: page size, default 10
          schema:
              type: integer
        - in: query
          name: order
          description: sort by field
          schema:
              type: string
        - in: query
          name: source
          description: 标注样本来源
          schema:
              type: string
              enum:
                  - box
                  - manual
                  - other
        - in: query
          name: filterIds
          description: 标注样本id列表
          schema:
            type: array
            items:
                type: integer
        - in: query
          name: filterCategorizationIds
          description: 标注样本分类id列表
          schema:
            type: array
            items:
                type: string
        - in: query
          name: likeCategorizationName
          description: 标注样本分类名称,模糊匹配
          schema:
              type: string
        - in: query
          name: filterCollection
          description: 标注样本集合类型
          schema:
              type: string
              enum:
                - train
                - test
        - in: query
          name: filterGteCreated
          description: 标注样本创建时间大于等于
          schema:
              type: string
        - in: query
          name: filterLteCreated
          description: 标注样本创建时间小于等于
          schema:
              type: string
        - in: query
          name: filterGteUpdated
          description: 标注样本更新时间大于等于
          schema:
              type: string
        - in: query
          name: filterLteUpdated
          description: 标注样本更新时间小于等于
          schema:
              type: string
        - in: query
          name: filterSn
          description: 标注样本来源sn
          schema:
              type: string
      responses:
        '200':
          description: got back the list of labeledDatas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/labeledDatas'
  /labeledData/{{id}}:
    get:
      summary: 查询标注样本详细信息
      tags:
        - 样本服务-labeledData
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: got back labeledData info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/labeledData'
    delete:
        summary: 删除标注样本
        tags:
            - 样本服务-labeledData
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: string
        responses:
            '200':
              description: ' delete the specified labeledData'
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/result'
    put:
      summary: 更新标注样本
      tags:
          - 样本服务-labeledData
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/labeledDataUpdateBody'
      responses:
        '200':
          description: ' update the specified labeledData'
  /labeledData/import:
    post:
      summary: 导入标注样本压缩包
      tags:
        - 样本服务-labeledData
      responses:
        '200':
          description: ' import the specified labeledData'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/labeledDataImportBody'
  /labeledData/add:
    post:
      summary: 添加标注样本
      tags:
        - 样本服务-labeledData
      responses:
        '200':
          description: ' add the specified labeledData'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/labeledDataAddBody'

  /datasets:
    get:
      summary:  查询数据集列表
      tags:
        - 样本服务-datasets
      operationId: gets the list of datasets
      parameters:
        - in: query
          name : page
          description: page number, default 1
          schema:
            type: integer
        - in: query
          name : limit
          description: page size, default 10
          schema:
              type: integer
        - in: query
          name: order
          description: sort by field
          schema:
              type: string
        - in: query
          name: filterName
          schema:
            type: string
        - in: query
          name: filterScene
          schema:
            type: string
            enum:
              - detection
              - classification
      responses:
        '200':
          description: got back the list of datasets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasets'
    post:
      summary: 创建数据集
      tags:
        - 样本服务-datasets
      responses:
        '200':
          description: ' create the specified dataset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/datasetBody'
  /datasets/{{id}}:
    get:
      summary: 获取数据集详细信息
      tags:
        - 样本服务-datasets
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: got back dataset info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataset'
    delete:
        summary: 删除数据集
        tags:
            - 样本服务-datasets
        parameters:
            - in: path
              required: true
              name: id
              schema:
                  type: string
        responses:
            '200' :
              description: ' delete the specified dataset'
              content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/result'
    put:
        summary: 更新数据集
        tags:
            - 样本服务-datasets
        parameters:
            - in: path
              required: true
              name: id
              schema:
                  type: string
        responses:
            '200' :
              description: ' update the specified dataset'
              content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/result'
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/datasetBody'
  /datasets/{{datasetId}}/add/labeledData:
    post:
      summary: 添加标注样本到数据集
      tags:
        - 样本服务-datasets
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
        - in: query
          name: labeledDataIds
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ' add the specified labeledDatas to dataset'
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/result'
  /datasets/{{id}}/remove/labeledData:
    post:
      summary: 从数据集中移除标注样本
      tags:
        - 样本服务-datasets
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
        - in: query
          name: labeledDataIds
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ' remove the specified labeledDatas from dataset'
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/result'
  /datasets/{{id}}/exports:
    get:
      summary: 导出数据集
      tags:
        - 样本服务-datasets
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
            enum:
              - json
              - xml
              - csv
              - yaml
      responses:
        '200':
          description: ' export the specified dataset'
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/result'

  /validation-set:
    get:
          summary:  查询验证集列表
          tags:
            - 样本服务-validation-set
          operationId: gets the list of validation-set
          parameters:
            - in: query
              name : page
              description: page number, default 1
              schema:
                type: integer
            - in: query
              name : limit
              description: page size, default 10
              schema:
                  type: integer
            - in: query
              name: order
              description: sort by field
              schema:
                  type: string
            - in: query
              name: filterName
              schema:
                type: string
            - in: query
              name: filterScene
              schema:
                type: string
                enum:
                  - detection
                  - classification
          responses:
            '200':
              description: got back the list of validation-set
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/validation-set'
    post:
      summary: 创建验证集
      tags:
        - 样本服务-validation-set
      responses:
        '200':
          description: ' create the specified validation-set'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validation-setBody'
  /validation-set/{{id}}:
    get:
      summary: 获取验证集详细信息
      tags:
        - 样本服务-validation-set
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: got back validation-set info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validation-set'
    delete:
        summary: 删除验证集
        tags:
            - 样本服务-validation-set
        parameters:
            - in: path
              required: true
              name: id
              schema:
                  type: string
        responses:
            '200' :
              description: ' delete the specified validation-set'
              content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/result'
    put:
        summary: 更新验证集
        tags:
            - 样本服务-validation-set
        parameters:
            - in: path
              required: true
              name: id
              schema:
                  type: string
        responses:
            '200' :
              description: ' update the specified validation-set'
              content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/result'
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/validation-setBody'
  /validation-set/{{validationSetId}}/add/labeledData:
    post:
      summary: 添加标注样本到验证集
      tags:
        - 样本服务-validation-set
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
        - in: query
          name: labeledDataIds
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ' add the specified labeledDatas to validation-set'
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/result'
  /validation-set/{{id}}/remove/labeledData:
    post:
      summary: 从验证集中移除标注样本
      tags:
        - 样本服务-validation-set
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
        - in: query
          name: labeledDataIds
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ' remove the specified labeledDatas from validation-set'
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/result'

  /rule/save:
    post:
      summary: 训练聚合任务添加
      tags:
        - 规则聚合服务
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'

      responses:
        '200':
          description: ' rule control'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
  /rule/update:
    post:
      summary: 训练聚合任务更新
      tags:
        - 规则聚合服务
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleUpdateBody'

      responses:
        '200':
          description: ' rule control'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
  /rule/list:
    get:
      summary: 获取训练聚合任务列表
      tags:
        - 规则聚合服务
      operationId: gets the list of rule
      parameters:
        - in: query
          name : page
          description: page number, default 1
          schema:
            type: integer
        - in: query
          name : limit
          description: page size, default 10
          schema:
            type: integer
      #        - in: query
      #          name: name
      #          description: 规则名称
      #          schema:
      #              type: string
      #        - in: query
      #          name: target
      #          description: 训练目标,模糊匹配
      #          schema:
      #            type: string
      responses:
        '200':
          description: got back the list of rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleList'
  /rule/remove:
    post:
      summary: 删除训练聚合任务
      tags:
        - 规则聚合服务
      responses:
        '200':
          description: ' remove the specified rule'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      parameters:
        - in: query
          name: id
          description: 训练聚合任务id
          schema:
            type: integer
  /rule/id/{{id}}:
    get:
      summary: 获取单个训练聚合任务详细信息
      tags:
        - 规则聚合服务
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: got back rule info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'

  /rule/train/save:
    post:
      summary: 模型训练规则添加
      tags:
        - 规则服务
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/trainRuleBody'

      responses:
        '200':
          description: ' train control'
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/result'
  /rule/train/list:
    get:
      summary: 获取模型训练规则列表
      tags:
        - 规则服务
      operationId: gets the list of trainRule
      parameters:
        - in: query
          name : page
          description: page number, default 1
          schema:
            type: integer
        - in: query
          name : limit
          description: page size, default 10
          schema:
              type: integer
#        - in: query
#          name: name
#          description: 规则名称
#          schema:
#              type: string
#        - in: query
#          name: target
#          description: 训练目标,模糊匹配
#          schema:
#            type: string
      responses:
        '200':
          description: got back the list of trainRule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trainRuleList'
  /rule/train/id/{{id}}:
    get:
      summary: 获取单个模型训练规则详细信息
      tags:
        - 规则服务
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: got back trainRule info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trainRuleResponse'
  /rule/train/remove:
    post:
      summary: 删除模型训练规则
      tags:
        - 规则服务
      responses:
        '200':
          description: ' remove the specified trainRule'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      parameters:
        - in: query
          name: id
          description: 模型训练规则id
          schema:
              type: string

  /rule/train/status:
    post:
      summary: 模型训练规则状态修改接口
      tags:
        - 规则服务
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/trainRuleStatusBody'
      responses:
        '200':
          description: ' train control'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'

  /rule/dataset/save:
    post:
      summary: 样本采集规则添加
      tags:
        - 规则服务
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/datasetRuleBody'

      responses:
        '200':
          description: ' imageGather control'
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/result'
  /rule/dataset/list:
    get:
      summary: 获取样本采集规则列表
      tags:
        - 规则服务
      operationId: gets the list of datasetRule
      parameters:
        - in: query
          name : page
          description: page number, default 1
          schema:
            type: integer
        - in: query
          name : limit
          description: page size, default 10
          schema:
              type: integer
#        - in: query
#          name: name
#          description: 规则名称
#          schema:
#              type: string
#        - in: query
#          name: target
#          description: 采集目标,模糊匹配
#          schema:
#            type: string
      responses:
        '200':
          description: got back the list of datasetRule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetRuleList'
  /rule/dataset/remove:
    post:
      summary: 删除样本采集规则
      tags:
        - 规则服务
      responses:
        '200':
          description: ' remove the specified datasetRule'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      parameters:
        - in: query
          name: id
          description: 样本采集规则id
          schema:
              type: string

  /rule/dataset/id/{{id}}:
    get:
      summary: 获取单个样本采集规则详细信息
      tags:
        - 规则服务
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: got back datasetRule info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetRuleResponse'

  /modelInfos:
    get:
        summary: 查询/推送模型信息
        tags:
            - 应用测评服务-modelInfos
        operationId: gets the list of modelInfos
        parameters:
            - in: query
              name : page
              description: page number, default 1
              schema:
                  type: integer
            - in: query
              name : limit
              description: page size, default 10
              schema:
                  type: integer
            - in: query
              name: order
              description: sort by field
              schema:
                  type: string
            - in: query
              name: filterName
              schema:
                  type: string
            - in: query
              name: filterScene
              schema:
                  type: string
                  enum:
                  - detection
                  - classification
        responses:
            '200':
              description: got back the list of modelInfos
              content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/modelInfos'
  /models/import:
    post:
      summary: 导入模型
      tags:
        - 算法服务-models
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modelImportBody'
      responses:
        '200':
          description: ' import the specified model'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
  /models/{{id}}/exports:
    get:
      summary: 导出模型
      tags:
        - 算法服务-models
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
            enum:
              - json
              - xml
              - csv
              - yaml
      responses:
        '200':
          description: ' export the specified model'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'

  /devices:
    get:
        summary: 查询设备列表
        tags:
            - 设备管理服务-devices
        operationId: gets the list of devices
        parameters:
            - in: query
              name : page
              description: page number, default 1
              schema:
                  type: integer
            - in: query
              name : limit
              description: page size, default 10
              schema:
                  type: integer
        responses:
            '200':
              description: got back the list of devices
              content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/devices'
    post:
        summary: 添加设备
        tags:
            - 设备管理服务-devices
        requestBody:
            required: true
            content:
              application/json:
                  schema:
                      $ref: '#/components/schemas/deviceBody'
        responses:
            '200':
              description: ' create the specified device'
              content:
                  application/json:
                      schema:
                          $ref: '#/components/schemas/result'

components:
  schemas:
    result:
        type: object
        required:
            - code
            - message
#            - data
        properties:
            code:
              type: number
            message:
              type: string
#            data:
#                type: object
    error:
        type: object
        required:
            - code
            - message
        properties:
            code:
              type: number
            message:
              type: string
    dataset:
      type: object
      required:
        - id
        - name
        - summary
        - scene
        - cover
        - train_set
        - val_set
        - reason
        - status
        - created
        - updated
      properties:
        id:
          type: string
        name:
          type: string
        summary:
          type: string
        scene:
          type: string
          enum:
              - detection
              - classification
        cover:
          type: string
          description: cover image url
        trainSet:
          type: object
          required:
            - id
            - imageCount
            - classCount
            - annotationCount
            - size
          properties:
            id:
              type: string
            imageCount:
              type: number
            classCount:
              type: number
            annotationCount:
              type: number
            size:
              type: number
        valSet:
          type: object
          required:
            - id
            - imageCount
            - classCount
            - annotationCount
            - size
          properties:
            id:
              type: string
            imageCount:
              type: number
            classCount:
              type: number
            annotationCount:
              type: number
            size:
              type: number


        reason:
          type: string
        status:
          type: number
          enum:
            - 1
            - 2
            - 3
        created:
          type: number
        updated:
          type: number
    datasets:
      type: object
      required:
        - items
        - total
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/dataset'
        total:
          type: number
    datasetBody:
      type: object
      required:
        - name
        - summary
        - scene
        - cover
      properties:
        name:
          type: string
        summary:
          type: string
        scene:
          type: string
        cover:
          type: string

    validation-set:
        type: object
        required:
            - id
            - name
            - summary
            - scene
            - cover
            - dataset
            - reason
            - status
            - created
            - updated
        properties:
            id:
              type: string
            name:
              type: string
            summary:
              type: string
            scene:
              type: string
              enum:
                - detection
                - classification
            cover:
              type: string
              description: cover image url
            dataset:
              type: object
              required:
                - id
                - imageCount
                - classCount
                - annotationCount
                - size
              properties:
                id:
                  type: string
                imageCount:
                  type: number
                classCount:
                  type: number
                annotationCount:
                  type: number
                size:
                  type: number
            reason:
              type: string
            status:
              type: number
              enum:
                - 1
                - 2
                - 3
            created:
              type: number
            updated:
              type: number
    validation-setBody:
        type: object
        required:
            - name
            - summary
            - scene
            - cover
        properties:
            name:
              type: string
            summary:
              type: string
            scene:
              type: string
            cover:
              type: string
    rawData:
        type: object
        required:
            - id
            - width
            - height
            - size
            - md5
            - status
            - sourceType
            - sourceId
            - createdAt
            - updatedAt
        properties:
            id:
              type: string
            width:
                type: integer
            height:
                type: integer
            size:
                type: integer
            status:
              type: string
              enum:
                - UNLABELED
                - LABELED
                - LOCKED
            sourceId:
                type: integer
            sourceType:
              type: string
              enum:
                - BOX
                - MANUAL
                - OTHER
            createdAt:
                type: string
                format: date-time
            updatedAt:
                type: string
                format: date-time

    rawDatas:
      type: object
      required:
        - code
        - data
        - count
      properties:
        code:
          type: number
        data:
          type: array
          items:
            $ref: '#/components/schemas/rawData'
        count:
          type: integer
    rawDataImportZipFileBody:
      type: object
      required:
        - url
        - size
        - hash
      properties:
        filename:
          type: string
        url:
          type: string
        size:
            type: number
        hash:
            type: string
    rawDataAddBody:
      type: object
      required:
        - files
        - sourceType
        - sourceId
        - sourceTaskId
        - annotation
      properties:
        files:
            type: array
            items:
                type: string
                format: binary
        sourceType:
            type: string
            enum:
                - BOX
                - MANUAL
                - OTHER
        sourceId:
            type: string
        sourceTaskId:
            type: integer
        annotation:
            type: string
            description:
              array of json string
            example:
                - [{"xMin": 1, "xMax": 2, "yMin": 3, "yMax": 4, "labelClassKey": "person"}, {"xMin": 2, "xMax": 2, "yMin": 3, "yMax": 4, "labelClassKey": "person"}]
    labeledData:
      type: object
      required:
        - id
        - created
        - updated
        - size
        - collection
        - source_type
        - source_sn
        - imageUrl
        - labelUrl
        - labelCategoryList
        - labelAnnotationList
      properties:
        id:
          type: string
        created:
          type: number
        updated:
          type: number
        size:
          type: number
        collection:
          type: string
        source_type:
          type: string
        source_sn:
          type: string
        imageUrl:
          type: string
        labelUrl:
          type: string
        labelCategoryList:
          type: array
          items:
            $ref: '#/components/schemas/labelCategory'
    labeledDataUpdateBody:
      type: object
      required:
          - id
          - labelAnnotationList
      properties:
        id:
          type: string
        labelAnnotationList:
            type: array
            items:
              $ref: '#/components/schemas/labelAnnotation'
    labeledDataImportBody:
        type: object
        required:
            - filename
            - url
            - size
            - hash
        properties:
            filename:
              type: string
            url:
              type: string
            size:
                type: number
            hash:
                type: string
    labeledDataAdd:
      type: object
      required:
          - collection
          - source
          - sn
          - imageUrl
          - labelUrl
          - labelCategoryList
          - labelAnnotationList
      properties:
        collection:
          type: string
        source:
          type: string
        sn:
          type: string
        imageUrl:
          type: string
        labelUrl:
          type: string
        labelCategoryList:
          type: array
          items:
            $ref: '#/components/schemas/labelCategory'
        labelAnnotationList:
          type: array
          items:
            $ref: '#/components/schemas/labelAnnotation'
    labeledDataAddBody:
      type: object
      required:
          - labeledDataList
      properties:
        labeledDataList:
          type: array
          items:
            $ref: '#/components/schemas/labeledDataAdd'

    labeledDatas:
        type: object
        required:
            - items
            - total
        properties:
            items:
              type: array
              items:
                  $ref: '#/components/schemas/labeledData'
            total:
              type: number
    labelCategory:
      type: object
      required:
        - id
        - name
        - description
        - color
        - created
        - updated
      properties:
        id:

          type: string
        name:
          type: string
        description:
          type: string
        color:
          type: string
        created:
          type: number
        updated:
          type: number
    labelAnnotationList:
        type: array
        items:
          $ref: '#/components/schemas/labelAnnotation'
    labelAnnotation:
        type: object
        required:
            - id
            - category
            - bbox
            - created
            - updated
        properties:
            id:
              type: string
            category:
              type: string
            bbox:
              type: object
              required:
                  - x
                  - y
                  - w
                  - h
              properties:
                  x:
                    type: number
                  y:
                    type: number
                  w:
                    type: number
                  h:
                    type: number
            created:
              type: number
            updated:
              type: number
            width:
              type: number
            height:
              type: number


    trainRule:
      type: object
      required:
        - id
        - name
        - description
        - priority
        - condition
        - targetList
#        - createdAt
#        - updatedAt
        - progressList
#        - effectiveDatatime
      properties:
        id:
          type: string
        name:
          type: string
        effectiveDatatime:
          type: object
          description: 规则生效时间
          required:
            - startTime
            - endTime
            - startDate
            - endDate
          properties:
            startTime:
              type: string
              description: 开始时间
            endTime:
              type: string
              description: 结束时间
            startDate:
              type: string
              description: 开始日期
            endDate:
              type: string
              description: 结束日期
        description:
          type: string
        priority:
          type: integer
          description: 优先级1-100
        condition:
          type: object
          required:
            - sampleQuantityThreshold
            - numberOfIterations
          properties:
            sampleQuantityThreshold:
              description: 样本增量大于阈值时触发
              type: integer
            numberOfIterations:
              description: 训练次数上限
              type: integer
        targetList:
          type: array
          items:
            type: string
            description: label key list
        progressList:
            type: array
            items:
              $ref: '#/components/schemas/modelProgress'

    trainRuleList:
      type: object
      required:
        - code
        - data
        - msg
        - count
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/trainRule'
        count:
          type: integer
    trainRuleStatusBody:
        type: object
        required:
            - ruleId
            - status
#            - progress
            - phase
            - remainingTime
        properties:
            ruleId:
                type: integer
            status:
                type: string
                enum:
                  - PENDING
                  - RUNNING
                  - SUCCESS
                  - FAILED
#                  - FINISHED
            progress:
                type: number
                description: 进度百分比
            phase:
                type: string
                description: 训练阶段
                enum:
                  - PREPARE
                  - TRAIN
                  - EVALUATE
                  - QUALITY
                  - FINISH
            remainingTime:
                type: number
                description: 剩余时间
    trainRuleBody:
      type: object
      required:
#        - name
#        - description
        - priority
        - condition
        - targetList
#        - effectiveDatatime
      properties:
        name:
          type: string
        description:
          type: string
        engineInfo:
          type: object
          required:
              - engineId
              - targetChip
          properties:
                engineId:
                    type: integer
                targetChip:
                    type: string
        priority:
          type: integer
          description: 优先级1-100
        condition:
          type: object
          required:
            - sampleQuantityThreshold
            - numberOfIterations
          properties:
            sampleQuantityThreshold:
              description: 距上次迭代样本增量大于阈值时触发
              type: integer
            numberOfIterations:
              description: 训练次数上限
              type: integer
        targetList:
          type: array
          items:
            type: string
            description: label key list
        effectiveDatatime:
          type: object
          description: 规则生效时间
          required:
            - startTime
            - endTime
            - startDate
            - endDate
          properties:
            startTime:
              type: string
              description: 开始时间
            endTime:
              type: string
              description: 结束时间
            startDate:
              type: string
              description: 开始日期
            endDate:
              type: string
              description: 结束日期
    datasetRuleBody:
      type: object
      required:
#        - name
#        - description
        - sourceList
#        - effectiveDatatime
      properties:
        name:
          type: string
        description:
          type: string
        effectiveDatatime:
          type: object
          description: 规则生效时间
          required:
            - startTime
            - endTime
            - startDate
            - endDate
          properties:
            startTime:
              type: string
              description: 开始时间
            endTime:
              type: string
              description: 结束时间
            startDate:
              type: string
              description: 开始日期
            endDate:
              type: string
              description: 结束日期
        sourceList:
          type: array
          items:
              type: object
              required:
                - brokerAddress
                - aiSn
                - cameraId
                - cameraAIInfo
              properties:
                brokerAddress:
                  type: string
                aiSn:
                  type: string
                cameraId:
                  type: string
                cameraAiInfo:
                  type: object
                  description: AI应用信息
                  required:
                    - cameraAIId
                    - interval
                    - objectThresh
                    - modelInfoList
                  properties:
                    cameraAIId:
                      type: string
                      description: AI应用ID
                    interval:
                        type: number
                        description: 采集间隔
                    objectThresh:
                        type: number
                        description: 告警目标阈值
                    modelInfoList:
                        type: array
                        description: 配置模型信息
                        items:
                            type: object
                            required:
                              - index
                              - modelId
                              - objLabels
                              - operator
                            properties:
                                index:
                                    type: number
                                    description: 模型优先级
                                modelId:
                                    type: string
                                    description: 模型ID
                                objLabels:
                                    type: array
                                    description: 目标标签列表
                                    items:
                                      type: string
                                operator:
                                    type: string
                                    description: 操作符 E 检测到所有目标 IN 检测到目标之一
                                    enum:
                                    - IN
    datasetRule:
       type: object
       required:
        - id
        - name
        - description
        - sourceList
        - createdAt
        - updatedAt
        - progressList
#        - effectiveDatatime
       properties:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          sourceList:
            type: array
            items:
                type: object
                required:
                  - brokerAddress
                  - aiSn
                  - cameraId
                  - cameraAIInfo
                properties:
                  brokerAddress:
                    type: string
                  aiSn:
                    type: string
                  cameraId:
                    type: string
                  cameraAiInfo:
                    type: object
                    required:
                      - cameraAIId
                      - interval
                      - objectThresh
                      - modelInfoList
                    properties:
                      cameraAIId:
                        type: string
                      interval:
                          type: number
                      objectThresh:
                          type: number
                      modelInfoList:
                          type: array
                          items:
                              type: object
                              required:
                                - index
                                - modelId
                                - objLabels
                                - operator
                              properties:
                                  index:
                                      type: number
                                  modelId:
                                      type: string
                                  objLabels:
                                      type: array
                                      items:
                                        type: string
                                  operator:
                                      type: string
                                      enum:
                                      - IN
          created:
            type: number
          updated:
            type: number
          progressList:
              type: array
              description: 每个source的进度情况
              items:
                $ref: '#/components/schemas/datasetProgress'
          effectiveDatatime:
            type: object
            description: 规则生效时间
            required:
              - startTime
              - endTime
              - startDate
              - endDate
            properties:
                startTime:
                    type: string
                    description: 开始时间
                endTime:
                    type: string
                    description: 结束时间
                startDate:
                    type: string
                    description: 开始日期
                endDate:
                    type: string
                    description: 结束日期
    datasetRuleList:
      type: object
      required:
        - code
        - msg
        - data
        - count
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/datasetRule'
        count:
          type: integer
    ruleBody:
      type: object
      required:
#        - name
#        - description
#        - priority
        - condition
#        - targetList
#        - sourceList
        - event
        - effectiveDatetime
      properties:
        name:
          type: string
        description:
          type: string
#        priority:
#          type: integer
#          description: 优先级1-100
        condition:
          type: object
          required:
            - sampleQuantityThreshold
            - numberOfIterations
          properties:
            sampleQuantityThreshold:
              description: 样本增量大于阈值时触发
              type: integer
            numberOfIterations:
              description: 训练次数上限
              type: integer
        event:
          type: string
          description: 任务关联事件

#        targetList:
#          type: array
#          items:
#            type: string
#            description: label key list
#        sourceList:
#          type: array
#          items:
#              type: object
#              required:
#                - brokerAddress
#                - aiSn
#                - cameraId
#                - cameraAIInfo
#              properties:
#                brokerAddress:
#                  type: string
#                aiSn:
#                  type: string
#                cameraId:
#                  type: string
#                cameraAiInfo:
#                  type: object
#                  description: AI应用信息
#                  required:
#                    - cameraAIId
#                    - interval
#                    - objectThresh
#                    - modelInfoList
#                  properties:
#                    cameraAIId:
#                      type: string
#                      description: AI应用ID
#                    interval:
#                        type: number
#                        description: 采集间隔
#                    objectThresh:
#                        type: number
#                        description: 告警目标阈值
#                    modelInfoList:
#                        type: array
#                        description: 配置模型信息
#                        items:
#                            type: object
#                            required:
#                              - index
#                              - modelId
#                              - objLabels
#                              - operator
#                            properties:
#                                index:
#                                    type: number
#                                    description: 模型优先级
#                                modelId:
#                                    type: string
#                                    description: 模型ID
#                                objLabels:
#                                    type: array
#                                    description: 目标标签列表
#                                    items:
#                                      type: string
#                                operator:
#                                    type: string
#                                    description: 操作符 E 检测到所有目标 IN 检测到目标之一
#                                    enum:
#                                    - IN
#                                    - E
        effectiveDatetime:
          type: object
          description: 规则生效时间
          required:
#            - startTime
#            - endTime
            - startDate
            - endDate
          properties:
#            startTime:
#              type: string
#              description: 开始时间
#            endTime:
#              type: string
#              description: 结束时间
            startDate:
              type: string
              description: 开始日期
            endDate:
              type: string
              description: 结束日期
    ruleUpdateBody:
        type: object
        required:
            - id
        properties:
          id:
            type: integer
          name:
            type: string
            description: 规则名称
          condition:
            type: object
            required:
                - sampleQuantityThreshold
                - numberOfIterations
            properties:
                sampleQuantityThreshold:
                    description: 样本增量大于阈值时触发
                    type: integer
                numberOfIterations:
                    description: 训练次数上限
                    type: integer
          event:
              type: string
              description: 任务关联事件
          effectiveDatetime:
              type: object
              description: 规则生效时间
              required:
                  - startDate
                  - endDate
              properties:
                  startDate:
                      type: string
                      description: 开始日期
                  endDate:
                      type: string
                      description: 结束日期
    ruleList:
      type: object
      required:
        - code
        - msg
        - data
        - count
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/rule'
        count:
          type: integer
    ruleResponse:
      type: object
      required:
        - code
        - msg
        - data
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          $ref: '#/components/schemas/rule'
    rule:
      type: object
      required:
        - id
        - name
        - description
#        - priority
        - condition
#        - targetList
#        - sourceList
        - effectiveDatetime
        - modelProgressList
        - datasetProgressList
      properties:
        id:
            type: integer
        name:
            type: string
        description:
            type: string
        condition:
            type: object
            required:
                - sampleQuantityThreshold
                - numberOfIterations
            properties:
                sampleQuantityThreshold:
                    description: 样本增量大于阈值时触发
                    type: integer
                numberOfIterations:
                    description: 训练次数上限
                    type: integer
#        targetList:
#            type: array
#            items:
#                type: string
#                description: label key list
#        sourceList:
#            type: array
#            items:
#                type: object
#                required:
#                    - brokerAddress
#                    - aiSn
#                    - cameraId
#                    - cameraAIInfo
#                properties:
#                    brokerAddress:
#                        type: string
#                    aiSn:
#                        type: string
#                    cameraId:
#                        type: string
#                    cameraAiInfo:
#                        type: object
#                        description: AI应用信息
#                        required:
#                            - cameraAIId
#                            - interval
#                            - objectThresh
#                            - modelInfoList
#                        properties:
#                            cameraAIId:
#                                type: string
#                                description: AI应用ID
#                            interval:
#                                type: number
#                                description: 采集间隔
#                            objectThresh:
#                                type: number
#                                description: 告警目标阈值
#                            modelInfoList:
#                                type: array
#                                description: 配置模型信息
#                                items:
#                                    type: object
#                                    required:
#                                        - index
#                                        - modelId
#                                        - objLabels
#                                        - operator
#                                    properties:
#                                        index:
#                                            type: number
#                                            description: 模型优先级
#                                        modelId:
#                                            type: string
#                                            description: 模型ID
#                                        objLabels:
#                                            type: array
#                                            description: 目标标签列表
#                                            items:
#                                                type: string
#                                        operator:
#                                            type: string
#                                            description: 操作符 E 检测到所有目标 IN 检测到目标之一
#                                            enum:
#                                                - IN
#                                                - E

        effectiveDatetime:
            type: object
            description: 规则生效时间
            required:
#                - startTime
#                - endTime
                - startDate
                - endDate
            properties:
#                startTime:
#                    type: string
#                    description: 开始时间
#                endTime:
#                    type: string
#                    description: 结束时间
                startDate:
                    type: string
                    description: 开始日期
                endDate:
                    type: string
                    description: 结束日期
        modelProgressList:
            type: array
            description: 每个source的进度情况
            items:
              $ref: '#/components/schemas/modelProgress'
        datasetProgressList:
            type: array
            description: 每个source的进度情况
            items:
              $ref: '#/components/schemas/datasetProgress'
    trainRuleResponse:
      type: object
      required:
        - code
        - msg
        - data
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          $ref: '#/components/schemas/trainRule'
    datasetRuleResponse:
      type: object
      required:
          - code
          - msg
          - data
      properties:
            code:
                type: number
            msg:
                type: string
            data:
                $ref: '#/components/schemas/datasetRule'
    modelProgress:
      type: object
      required:
        - iterationNumber
        - models
      properties:
        iterationNumber:
          type: number
        model:
          type: object
          required:
            - modelId
            - status
            - progress
          properties:
            modelId:
              type: integer
            status:
              type: string
              enum:
                - PENDING
                - RUNNING
                - SUCCESS
                - FAILED
#                - FINISHED
            progress:
              type: number
              description: 进度百分比

    datasetProgress:
      type: array
      description: 每个source的进度情况
      items:
        type: object
        required:
          - brokerAddress
          - aiSn
          - sampleQuantity
          - status
        properties:
          brokerAddress:
            type: string
          aiSn:
            type: string
          sampleQuantity:
            type: number
          status:
            type: string
            enum:
              - PENDING
              - RUNNING
              - SUCCESS
              - FAILED
#              - FINISHED

    modelInfo:
        type: object
        required:
            - id
            - name
            - description
            - status
            - created
            - chipset
            - platform
            - accuracy
            - recall
            - precision
        properties:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          status:
            type: string
            enum:
              - training
              - trained
              - testing
              - tested
              - released
          created:
            type: number
          chipset:
            type: string
            enum:
              - rk1808
              - nvidia
              - amd
              - intel
              - other
          platform:
            type: string
            enum:
              - tensorflow
              - pytorch
              - caffe
              - mxnet
              - darknet
              - other
          accuracy:
            type: number
          recall:
            type: number
          precision:
            type: number
    modelInfos:
        type: object
        required:
            - items
            - total
        properties:
            items:
              type: array
              items:
                  $ref: '#/components/schemas/modelInfo'
            total:
              type: number
    modelImportBody:
      type: object
      required:
        - filename
        - url
        - size
        - hash
        - chipset
        - platform
        - accuracy
        - recall
        - precision
        - description
        - categoryList
      properties:
        filename:
          type: string
        url:
          type: string
        size:
            type: number
        hash:
            type: string
        chipset:
            type: string
            enum:
              - rk1808
              - nvidia
              - amd
              - intel
              - other
        platform:
            type: string
            enum:
              - tensorflow
              - pytorch
              - caffe
              - mxnet
              - darknet
              - other
        accuracy:
            type: number
        recall:
            type: number
        precision:
            type: number
        description:
            type: string
        categoryList:
            type: array
            items:
              $ref: '#/components/schemas/labelCategory'

    deviceBody:
      type: object
      required:
        - sn
        - productId
        - type
        - status
        - subDeviceList
      properties:
        sn:
          type: string
        type:
          type: string
          enum:
            - camera
            - box
            - other
        chipset:
          type: string
          enum:
            - rk1808
            - other
        status:
          type: string
          enum:
            - online
            - offline
            - other
        subDeviceList:
          type: array
          items:
            type: object
            required:
              - sn
              - productId
            properties:
                sn:
                    type: string
                productId:
                    type: string
                status:
                    type: string
                    enum:
                    - online
                    - offline
                    - other
    devices:
        type: object
        required:
            - items
            - total
        properties:
            items:
              type: array
              items:
                  $ref: '#/components/schemas/deviceBody'
            total:
              type: number