openapi: 3.0.1
info:
  title:  Training platform API
  description: Dataset management and model training
  version: '1.1'
servers:
  - url: http://localhost:5000/api/v1
paths:
  /rawDatas:
    get:
      summary: 获取预标注样本列表
      tags:
        - 样本服务-preLabeledData
      operationId: gets the list of rawData
      parameters:
        - in: query
          name : page
          description: page number, default 1
          schema:
            type: integer
        - in: query
          name : limit
          description: page size, default 10
          schema:
            type: integer
        - in: query
          name: order
          description: sort by field
          schema:
            type: string
        - in: query
          name: source
          description: 原始样本来源
          schema:
              type: string
              enum:
                - box
                - manual
                - other
        - in: query
          name: filterIds
          description: 原始样本id列表
          schema:
                type: array
                items:
                    type: integer
        - in: query
          name: filterStatus
          description: 原始样本状态
          schema:
            type: string
            enum:
              - unlabeled
              - labeled
              - locked
        - in: query
          name: filterResolution
          description: 原始样本分辨率,格式为宽x高,精确匹配
          schema:
              type: string
        - in: query
          name: likeResolution
          description: 原始样本分辨率,格式为宽x高,模糊匹配
          schema:
              type: string
        - in: query
          name: filterBoxSn
          description: 原始样本来源智盒sn
          schema:
              type: string
        - in: query
          name: gteCreated
          description: 原始样本创建时间大于等于
          schema:
              type: string
        - in: query
          name: lteCreated
          description: 原始样本创建时间小于等于
          schema:
              type: string
      responses:
        '200':
          description: got back the list of rawData
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rawDatas'
    delete:
        summary: 删除原始样本
        tags:
            - 样本服务-preLabeledData
        parameters:
          - in: query
            name: ids
            description: 原始样本id列表
            schema:
                type: array
                items:
                    type: integer
        responses:
          '200':
            description: ' delete the specified rawData'
            content:
                application/json:
                    schema:
                      $ref: '#/components/schemas/result'
  /rawDatas/import:
    post:
      summary: 导入原始样本压缩包
      tags:
        - 样本服务-preLabeledData
      responses:
        '200':
          description: ' import the specified rawData'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/rawDataImportZipFileBody'
  /rawDatas/add:
    post:
      summary: 导入原始样本
      tags:
        - 样本服务-preLabeledData
      responses:
        '200':
          description: ' import the specified rawData'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
                $ref: '#/components/schemas/rawDataImportPictureBody'

  /labeledDatas:
    get:
      summary: 查询标注样本列表
      tags:
        - 样本服务-labeledData
      operationId: gets the list of labeledDatas
      parameters:
        - in: query
          name : page
          description: page number, default 1
          schema:
            type: integer
        - in: query
          name : limit
          description: page size, default 10
          schema:
              type: integer
        - in: query
          name: order
          description: sort by field
          schema:
              type: string
        - in: query
          name: source
          description: 标注样本来源
          schema:
              type: string
              enum:
                  - box
                  - manual
                  - other
        - in: query
          name: filterIds
          description: 标注样本id列表
          schema:
            type: array
            items:
                type: integer
        - in: query
          name: filterCategorizationIds
          description: 标注样本分类id列表
          schema:
            type: array
            items:
                type: string
        - in: query
          name: likeCategorizationName
          description: 标注样本分类名称,模糊匹配
          schema:
              type: string
        - in: query
          name: filterCollection
          description: 标注样本集合类型
          schema:
              type: string
              enum:
                - train
                - test
        - in: query
          name: filterGteCreated
          description: 标注样本创建时间大于等于
          schema:
              type: string
        - in: query
          name: filterLteCreated
          description: 标注样本创建时间小于等于
          schema:
              type: string
        - in: query
          name: filterGteUpdated
          description: 标注样本更新时间大于等于
          schema:
              type: string
        - in: query
          name: filterLteUpdated
          description: 标注样本更新时间小于等于
          schema:
              type: string
        - in: query
          name: filterSn
          description: 标注样本来源sn
          schema:
              type: string
      responses:
        '200':
          description: got back the list of labeledDatas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/labeledDatas'
  /labeledDatas/{{id}}:
    get:
      summary: 查询标注样本详细信息
      tags:
        - 样本服务-labeledData
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: got back labeledData info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/labeledData'
    delete:
        summary: 删除标注样本
        tags:
            - 样本服务-labeledData
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: string
        responses:
            '200':
              description: ' delete the specified labeledData'
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/result'
    put:
      summary: 更新标注样本
      tags:
          - 样本服务-labeledData
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/labeledDataUpdateBody'
      responses:
        '200':
          description: ' update the specified labeledData'
  /labeledDatas/import:
    post:
      summary: 导入标注样本压缩包
      tags:
        - 样本服务-labeledData
      responses:
        '200':
          description: ' import the specified labeledData'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/labeledDataImportBody'
  /labeledDatas/add:
    post:
      summary: 添加标注样本
      tags:
        - 样本服务-labeledData
      responses:
        '200':
          description: ' add the specified labeledData'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/labeledDataAddBody'

  /datasets:
    get:
      summary:  查询数据集列表
      tags:
        - 样本服务-datasets
      operationId: gets the list of datasets
      parameters:
        - in: query
          name : page
          description: page number, default 1
          schema:
            type: integer
        - in: query
          name : limit
          description: page size, default 10
          schema:
              type: integer
        - in: query
          name: order
          description: sort by field
          schema:
              type: string
        - in: query
          name: filterName
          schema:
            type: string
        - in: query
          name: filterScene
          schema:
            type: string
            enum:
              - detection
              - classification
      responses:
        '200':
          description: got back the list of datasets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasets'
    post:
      summary: 创建数据集
      tags:
        - 样本服务-datasets
      responses:
        '200':
          description: ' create the specified dataset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/datasetBody'
  /datasets/{{id}}:
    get:
      summary: 获取数据集详细信息
      tags:
        - 样本服务-datasets
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: got back dataset info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataset'
    delete:
        summary: 删除数据集
        tags:
            - 样本服务-datasets
        parameters:
            - in: path
              required: true
              name: id
              schema:
                  type: string
        responses:
            '200' :
              description: ' delete the specified dataset'
              content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/result'
    put:
        summary: 更新数据集
        tags:
            - 样本服务-datasets
        parameters:
            - in: path
              required: true
              name: id
              schema:
                  type: string
        responses:
            '200' :
              description: ' update the specified dataset'
              content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/result'
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/datasetBody'
  /datasets/{{datasetId}}/add/labeledData:
    post:
      summary: 添加标注样本到数据集
      tags:
        - 样本服务-datasets
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
        - in: query
          name: labeledDataIds
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ' add the specified labeledDatas to dataset'
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/result'
  /datasets/{{id}}/remove/labeledData:
    post:
      summary: 从数据集中移除标注样本
      tags:
        - 样本服务-datasets
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
        - in: query
          name: labeledDataIds
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ' remove the specified labeledDatas from dataset'
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/result'

  /taskCreate/train:
    post:
      summary: 杆平台训练调用接口
      tags:
        - 训练控制服务-taskCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/trainBody'

      responses:
        '200':
          description: ' train control'
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/result'
  /taskCreate/imageGather:
    post:
      summary: 杆平台图片采集调用接口
      tags:
        - 训练控制服务-taskCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/imageGatherBody'

      responses:
        '200':
          description: ' imageGather control'
          content:
              application/json:
                schema:
                    $ref: '#/components/schemas/result'
  /modelInfos:
    get:
        summary: 查询模型列表
        tags:
            - 应用测评服务-modelInfos
        operationId: gets the list of modelInfos
        parameters:
            - in: query
              name : page
              description: page number, default 1
              schema:
                  type: integer
            - in: query
              name : limit
              description: page size, default 10
              schema:
                  type: integer
            - in: query
              name: order
              description: sort by field
              schema:
                  type: string
            - in: query
              name: filterName
              schema:
                  type: string
            - in: query
              name: filterScene
              schema:
                  type: string
                  enum:
                  - detection
                  - classification
        responses:
            '200':
              description: got back the list of modelInfos
              content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/modelInfos'

components:
  schemas:
    result:
        type: object
        required:
            - code
            - message
            - data
        properties:
            code:
              type: number
            message:
              type: string
            data:
                type: object
    error:
        type: object
        required:
            - code
            - message
        properties:
            code:
              type: number
            message:
              type: string
    dataset:
      type: object
      required:
        - id
        - name
        - summary
        - scene
        - cover
        - train_set
        - val_set
        - reason
        - status
        - created
        - updated
      properties:
        id:
          type: string
        name:
          type: string
        summary:
          type: string
        scene:
          type: string
          enum:
              - detection
              - classification
        cover:
          type: string
          description: cover image url
        trainSet:
          type: object
          required:
            - id
            - imageCount
            - classCount
            - annotationCount
            - size
          properties:
            id:
              type: string
            imageCount:
              type: number
            classCount:
              type: number
            annotationCount:
              type: number
            size:
              type: number
        valSet:
          type: object
          required:
            - id
            - imageCount
            - classCount
            - annotationCount
            - size
          properties:
            id:
              type: string
            imageCount:
              type: number
            classCount:
              type: number
            annotationCount:
              type: number
            size:
              type: number


        reason:
          type: string
        status:
          type: number
          enum:
            - 1
            - 2
            - 3
        created:
          type: number
        updated:
          type: number
    datasets:
      type: object
      required:
        - items
        - total
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/dataset'
        total:
          type: number
    datasetBody:
      type: object
      required:
        - name
        - summary
        - scene
        - cover
      properties:
        name:
          type: string
        summary:
          type: string
        scene:
          type: string
        cover:
          type: string

    rawData:
        type: object
        required:
            - id
            - resolution
            - status
            - source
            - created
            - updated
        properties:
            id:
              type: string
            resolution:
              type: string
            status:
              type: string
              enum:
                - unlabeled
                - labeled
                - locked
            source:
              type: string
              enum:
                - box
                - manual
                - other
            created:
              type: number
            updated:
              type: number
    rawDatas:
      type: object
      required:
        - items
        - total
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/rawData'
        total:
          type: number
    rawDataImportZipFileBody:
      type: object
      required:
        - url
        - size
        - hash
      properties:
        filename:
          type: string
        url:
          type: string
        size:
            type: number
        hash:
            type: string
    rawDataImportPictureBody:
      type: object
      required:
        - file
        - source
        - sn
      properties:
        file:
          type: string
          format: binary
        source:
          type: string
          description: '图片来源'
          enum:
            - box
            - manual
            - other
        sn:
          type: string
          description: '图片来源sn'

    labeledData:
      type: object
      required:
        - id
        - created
        - updated
        - size
        - collection
        - source
        - sn
        - imageUrl
        - labelUrl
        - labelCategoryList
        - labelAnnotationList
      properties:
        id:
          type: string
        created:
          type: number
        updated:
          type: number
        size:
          type: number
        collection:
          type: string
        source:
          type: string
        sn:
          type: string
        imageUrl:
          type: string
        labelUrl:
          type: string
        labelCategoryList:
          type: array
          items:
            $ref: '#/components/schemas/labelCategory'
    labeledDataUpdateBody:
      type: object
      required:
          - id
          - labelAnnotationList
      properties:
        id:
          type: string
        labelAnnotationList:
            type: array
            items:
              $ref: '#/components/schemas/labelAnnotation'
    labeledDataImportBody:
        type: object
        required:
            - filename
            - url
            - size
            - hash
        properties:
            filename:
              type: string
            url:
              type: string
            size:
                type: number
            hash:
                type: string
    labeledDataAdd:
      type: object
      required:
          - collection
          - source
          - sn
          - imageUrl
          - labelUrl
          - labelCategoryList
          - labelAnnotationList
      properties:
        collection:
          type: string
        source:
          type: string
        sn:
          type: string
        imageUrl:
          type: string
        labelUrl:
          type: string
        labelCategoryList:
          type: array
          items:
            $ref: '#/components/schemas/labelCategory'
        labelAnnotationList:
          type: array
          items:
            $ref: '#/components/schemas/labelAnnotation'
    labeledDataAddBody:
      type: object
      required:
          - labeledDataList
      properties:
        labeledDataList:
          type: array
          items:
            $ref: '#/components/schemas/labeledDataAdd'

    labeledDatas:
        type: object
        required:
            - items
            - total
        properties:
            items:
              type: array
              items:
                  $ref: '#/components/schemas/labeledData'
            total:
              type: number
    labelCategory:
      type: object
      required:
        - id
        - name
        - description
        - color
        - created
        - updated
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        color:
          type: string
        created:
          type: number
        updated:
          type: number
    labelAnnotationList:
        type: array
        items:
          $ref: '#/components/schemas/labelAnnotation'
    labelAnnotation:
        type: object
        required:
            - id
            - category
            - bbox
            - created
            - updated
        properties:
            id:
              type: string
            category:
              type: string
            bbox:
              type: object
              required:
                  - x
                  - y
                  - w
                  - h
              properties:
                  x:
                    type: number
                  y:
                    type: number
                  w:
                    type: number
                  h:
                    type: number
            created:
              type: number
            updated:
              type: number
            width:
              type: number
            height:
              type: number

    trainBody:
      type: object
      required:
        - targets
        - chipset
        - fps
      properties:
        targets:
          type: array
          description: '训练目标列表'
          items:
            type: string
        chipset:
            type: string
            description: '芯片类型'
            enum:
                - rk1808
                - nvidia
                - amd
                - intel
                - other
        fps:
          type: number
          description: '训练帧率'

    imageGatherBody:
      type: object
      required:
        - targets
        - boxSn
      properties:
        targets:
          type: array
          items:
            type: string
        boxSn:
          type: string

    modelInfo:
        type: object
        required:
            - id
            - name
            - description
            - status
            - created
            - chipset
            - platform
            - accuracy
            - recall
            - precision
        properties:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          status:
            type: string
            enum:
              - training
              - trained
              - testing
              - tested
              - released
          created:
            type: number
          chipset:
            type: string
            enum:
              - rk1808
              - nvidia
              - amd
              - intel
              - other
          platform:
            type: string
            enum:
              - tensorflow
              - pytorch
              - caffe
              - mxnet
              - darknet
              - other
          accuracy:
            type: number
          recall:
            type: number
          precision:
            type: number
    modelInfos:
        type: object
        required:
            - items
            - total
        properties:
            items:
              type: array
              items:
                  $ref: '#/components/schemas/modelInfo'
            total:
              type: number
